openapi: 3.0.0
info:
  title: API для учебного проекта "Шесть городов"
  version: 1.0.0
  description: Список ресурсов и маршрутов API «Шесть городов».
  contact:
    name: Vladimir Grankov
    email: vladimirgrankov@yandex.ru
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:3456
    description: Development server

tags:
  - name: offers
    description: Действия с предложениями.
  - name: users
    description: Действия с пользователями.

paths:
  /users/sign-up:
    post:
      tags:
        - users
      summary: Регистрация нового пользователя.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'

      responses:
        '201':
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        '409':
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Аутентификация пользователя.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: example@mail.ru

                password:
                  type: string
                  example: secretpassword

      responses:
        '200':
          description: Пользователь аутентифицирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        '401':
          description: Неверный email или пароль.

    get:
      tags:
        - users
      summary: Получение информации о текущем пользователе.
      responses:
        '200':
          description: Информация о текущем пользователе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userTokenPayload'

        '401':
          description: Пользователь не авторизован.

  /users/logout:
    post:
      tags:
        - users
      summary: Завершение пользовательской сессии.
      responses:
        '204':
          description: Сессия завершена успешно.

        '401':
          description: Пользователь не авторизован.

  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузка аватара пользователя.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

      requestBody:
        required: true
        content:
          multipart/form-data:
            encoding:
              avatar:
                contentType: image/jpeg, image/png
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary

      responses:
        '201':
          description: Аватар загружен. Путь к файлу.
          content:
            application/json:
              schema:
                type: object
                properties:
                  avatarUrl:
                    type: string
                    example: https://example.com/avatar.jpg

        '404':
          description: Пользователь не найден.

        '415':
          description: Некорректный формат файла.

  /users/favorites:
    get:
      tags:
        - users
      summary: Получение списка избранных предложений пользователя.

      responses:
        '200':
          description: Список избранных предложений.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerReduced'

        '404':
          description: Пользователь не найден.

    post:
      tags:
        - users
      summary: Добавление предложения в избранное.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                offerId:
                  type: string
                  example: 5f8f1f2b5b3e2b001f3b3b3b

      responses:
        '200':
          description: Предложение добавлено в избранное.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerReduced'

        '404':
          description: Пользователь или предложение не найдены.

  /users/favorites/{offerId}:
    delete:
      tags:
        - users
      summary: Удаление предложения из избранного.
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

      responses:
        '200':
          description: Предложение удалено из избранного.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerReduced'

        '404':
          description: Пользователь или предложение не найдены.

  /offers:
    get:
      tags:
        - offers
      summary: Получение списка предложений.
      parameters:
        - name: limit
          in: query
          schema:
            type: number
          example: 10

        - name: offset
          in: query
          schema:
            type: number
          example: 0

        - name: sort
          in: query
          schema:
            type: number
          example: -1

        - name: city
          in: query
          schema:
            type: string
          example: Paris

        - name: premium
          in: query
          schema:
            type: boolean
          example: true

      responses:
        '200':
          description: Список предложений.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerReduced'

    post:
      tags:
        - offers
      summary: Создание нового предложения.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffer'

      responses:
        '201':
          description: Предложение создано. Объект предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        '422':
          description: Некорректные данные предложения.

  /offers/premiums:
    get:
      tags:
        - offers
      summary: Получение списка премиум-предложений по городу.
      parameters:
        - name: city
          in: query
          schema:
            type: string
          example: Paris

      responses:
        '200':
          description: Список премиум-предложений по выбранному городу.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerReduced'

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Получение детальной информации о предложении.
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

      responses:
        '200':
          description: Информация о предложении.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        '404':
          description: Предложение не найдено.

    put:
      tags:
        - offers
      summary: Обновление информации о предложении.
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffer'

      responses:
        '200':
          description: Информация о предложении обновлена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        '404':
          description: Предложение не найдено.

    delete:
      tags:
        - offers
      summary: Удаление предложения.
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

      responses:
        '204':
          description: Предложение удалено.

        '404':
          description: Предложение не найдено.

  /offers/{offerId}/comments:
    get:
      tags:
        - offers
      summary: Получение списка комментариев к предложению.
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

      responses:
        '200':
          description: Список комментариев.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'

    post:
      tags:
        - offers
      summary: Создание нового комментария к предложению.
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createComment'

      responses:
        '201':
          description: Комментарий создан. Объект комментария.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'

        '404':
          description: Предложение не найдено.

components:
  schemas:
    createUser:
      type: object

      properties:
        email:
          type: string
          example: example@mail.ru

        name:
          type: string
          example: Jane Doe

        password:
          type: string
          example: secretpassword

    user:
      type: object

      properties:
        id:
          type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

        email:
          type: string
          example: example@mail.ru

        name:
          type: string
          example: Jane Doe

        type:
          type: string
          example: pro

    userTokenPayload:
      type: object

      properties:
        id:
          type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

        email:
          type: string
          example: example@mail.ru

        name:
          type: string
          example: Jane Doe

        iat:
          type: number
          example: 1603180800

        exp:
          type: number
          example: 1603184400

    createOffer:
      type: object

      properties:
        name:
          type: string
          example: Продам квартиру

        price:
          type: number
          example: 100000

        description:
          type: string
          example: Просторная квартира в центре города.

        city:
          type: string
          example: Paris

        previewUrl:
          type: string
          example: https://example.com/preview.jpg

        images:
          type: array
          items:
            type: string
          example:
            - https://example.com/image1.jpg
            - https://example.com/image2.jpg

        premium:
          type: boolean
          example: true

        housing:
          type: string
          example: apartment

        rooms:
          type: number
          example: 3

        guests:
          type: number
          example: 4

        features:
          type: array
          items:
            type: string
          example:
            - Breakfast
            - Air conditioning
            - Laptop friendly workspace
            - Baby seat
            - Washer
            - Towels
            - Fridge

    offer:
      type: object

      properties:
        id:
          type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

        name:
          type: string
          example: Продам квартиру

        price:
          type: number
          example: 100000

        description:
          type: string
          example: Просторная квартира в центре города.

        city:
          type: string
          example: Paris

        previewUrl:
          type: string
          example: https://example.com/preview.jpg

        images:
          type: array
          items:
            type: string
          example:
            - https://example.com/image1.jpg
            - https://example.com/image2.jpg

        premium:
          type: boolean
          example: true

        favorite:
          type: boolean
          example: false

        rating:
          type: number
          example: 4.5

        housing:
          type: string
          example: apartment

        rooms:
          type: number
          example: 3

        guests:
          type: number
          example: 4

        features:
          type: array
          items:
            type: string
          example:
            - wifi
            - heating
            - kitchen

        author:
          $ref: '#/components/schemas/user'

        commentsAmount:
          type: number
          example: 5

        createdAt:
          type: string
          example: 2020-10-20T08:00:00.000Z

    offerReduced:
      type: object

      properties:
        id:
          type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

        name:
          type: string
          example: Продам квартиру

        price:
          type: number
          example: 100000

        previewUrl:
          type: string
          example: https://example.com/preview.jpg

        rating:
          type: number
          example: 4.5

        city:
          type: string
          example: Paris

        housing:
          type: string
          example: apartment

        commentsAmount:
          type: number
          example: 5

        createdAt:
          type: string
          example: 2020-10-20T08:00:00.000Z

        premium:
          type: boolean
          example: true

        favorite:
          type: boolean
          example: false

    createComment:
      type: object

      properties:
        text:
          type: string
          example: Отличное предложение!

    comment:
      type: object

      properties:
        id:
          type: string
          example: 5f8f1f2b5b3e2b001f3b3b3b

        text:
          type: string
          example: Отличное предложение!

        createdAt:
          type: string
          example: 2020-10-20T08:00:00.000Z

        rating:
          type: number
          example: 5

        author:
          $ref: '#/components/schemas/user'
